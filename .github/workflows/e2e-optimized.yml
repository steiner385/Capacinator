name: E2E Tests (Optimized)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      shard:
        description: 'Specific shard to run (leave empty for all)'
        required: false
        default: ''

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright

jobs:
  # Quick smoke tests - always run first
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
      
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Install Playwright browsers
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npx playwright install chromium
      
      - name: Run smoke tests
        run: npm test -- --project=smoke
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: test-results/
          retention-days: 7

  # Main test matrix - runs after smoke tests pass
  e2e-tests:
    name: E2E Tests (Shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }})
    needs: smoke-tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9]
        shardTotal: [9]
        include:
          - shardIndex: 1
            shardName: 'quick'
          - shardIndex: 2
            shardName: 'crud'
          - shardIndex: 3
            shardName: 'core'
          - shardIndex: 4
            shardName: 'features'
          - shardIndex: 5
            shardName: 'reports-1'
          - shardIndex: 6
            shardName: 'reports-2'
          - shardIndex: 7
            shardName: 'scenarios'
          - shardIndex: 8
            shardName: 'security-integration'
          - shardIndex: 9
            shardName: 'tables-other'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
      
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Install Playwright browsers
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npx playwright install chromium
      
      - name: Start application
        run: |
          npm run build
          npm run dev &
          npx wait-on http://localhost:3120/api/health -t 60000
      
      - name: Run E2E tests (Shard ${{ matrix.shardIndex }})
        run: |
          npm test -- \
            --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} \
            --reporter=json,html \
            --config=playwright.config.optimized.ts
        env:
          CI: true
          SHARD_NAME: ${{ matrix.shardName }}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-shard-${{ matrix.shardIndex }}
          path: test-results/
          retention-days: 7
      
      - name: Upload playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ matrix.shardIndex }}
          path: playwright-report/
          retention-days: 7

  # Performance tests - run separately with limited parallelism
  performance-tests:
    name: Performance Tests
    needs: smoke-tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install chromium
      
      - name: Start application
        run: |
          npm run build
          npm run dev &
          npx wait-on http://localhost:3120/api/health -t 60000
      
      - name: Run performance tests
        run: npm test -- --project=performance --workers=2
        
      - name: Upload performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: test-results/
          retention-days: 30

  # Merge all test reports
  merge-reports:
    name: Merge Test Reports
    needs: [e2e-tests, performance-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: all-results/
          pattern: test-results-*
      
      - name: Merge test results
        run: |
          mkdir -p merged-results
          npx playwright merge-reports \
            --reporter=html \
            all-results/*/test-results
      
      - name: Generate performance report
        run: |
          node -r tsx tests/e2e/helpers/generate-performance-report.ts \
            all-results/*/test-results/performance-report.json \
            > merged-results/performance-summary.md
      
      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: merged-test-report
          path: |
            playwright-report/
            merged-results/
          retention-days: 30
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const perfSummary = fs.readFileSync('merged-results/performance-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: perfSummary
            });

  # Final status check
  e2e-status:
    name: E2E Tests Status
    needs: [smoke-tests, e2e-tests, performance-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check test status
        run: |
          if [[ "${{ needs.smoke-tests.result }}" == "failure" ]]; then
            echo "❌ Smoke tests failed"
            exit 1
          fi
          
          if [[ "${{ needs.e2e-tests.result }}" == "failure" ]]; then
            echo "❌ E2E tests failed"
            exit 1
          fi
          
          if [[ "${{ needs.performance-tests.result }}" == "failure" ]]; then
            echo "⚠️  Performance tests failed (non-blocking)"
          fi
          
          echo "✅ All required tests passed"